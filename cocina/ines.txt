me tienes q decir los atributos q hay en la base de datos de peliculas para poder meterselo en lo de la foto
y me tienes q poner lo q dice la segunda hoja q la primera la tengo entera ya
y si puedes pasame una foto de las carpetas y lo q hay dentro de cada fichero, en plan pones 
fich1: y copias y pegas todo para pasarselo al chat

RESPUESTA CHAT:
INES- esto tiene q ser en el archivo.yaml, la cosa es, q  poster, director, genre y rating son opcionales y dependen de lo q tengas en la bd, tienes q cambiarlos o decirme cuales son para q tenga sentido y no sea algo q no tiene nada q ver con la bd q os da

Puedes reemplazar o completar el fichero schema/movies.schema.yaml con el siguiente contenido en la parte correspondiente a components/schemas/Movie:

components:
  schemas:
    Movie:
      type: object
      required:
        - title
        - year
        - type
      properties:
        _id:
          type: string
          description: ID generada por la base de datos
        title:
          type: string
          description: T√≠tulo de la pel√≠cula
        year:
          type: integer
          description: A√±o de lanzamiento
        type:
          type: string
          description: Tipo de contenido (por ejemplo, "movie", "series", etc.)
        poster:
          type: string
          description: URL del p√≥ster (si est√° disponible)
        director:
          type: string
          description: Director de la pel√≠cula (si est√° disponible)
        genre:
          type: string
          description: G√©nero de la pel√≠cula (si est√° disponible)
        rating:
          type: number
          format: float
          description: Puntuaci√≥n de la pel√≠cula (si est√° disponible)
      additionalProperties: true



Sustituye el bloque de POST /movies en movie.js por esto:

//addMovie
router.post('/', async (req, res) => {
  const dbConnect = dbo.getDb();
  const { title, year, type, ...rest } = req.body;

  if (!title || !year || !type) {
    return res.status(400).send({ error: 'Missing required fields: title, year, type' });
  }

  const newMovie = {
    title,
    year: parseInt(year),
    type,
    ...rest 
  };

  try {
    const result = await dbConnect.collection(COLLECTION).insertOne(newMovie);
    res.status(201).send({ insertedId: result.insertedId });
  } catch (err) {
    res.status(500).send({ error: 'Error inserting movie' });
  }
});



TAMBIEN DENTRO DE MOVIE.JS TIENES Q QUITAR ESTO:
//getMovieById
router.get('/:id', async (req, res) => {
  const dbConnect = dbo.getDb();
  let query = {_id: new ObjectId(req.params.id)};
  let result = await dbConnect
    .collection(COLLECTION)
    .findOne(query);
  if (!result){
    res.send("Not found").status(404);
  } else {
    res.status(200).send(result);
  }
});

Y TIENES Q PONER ESTO:

//getMovieById
router.get('/:id', async (req, res) => {
  const dbConnect = dbo.getDb();
  let query = { _id: new ObjectId(req.params.id) };
  try {
    const result = await dbConnect.collection(COLLECTION).findOne(query);
    if (!result) {
      return res.status(404).send({ error: "Movie not found" });
    }
    res.status(200).send(result);
  } catch (err) {
    res.status(400).send({ error: "Invalid ID format" });
  }
});



dime q mas falta porfa y a q hora acabas tecnicamente


ESTO ES LO Q ME DICE EL CHAT Q FALTA:
‚ùå FALTA
4. Montar Swagger para visualizar el OpenAPI
No lo hemos hecho todav√≠a. Podemos hacerlo con swagger-ui-express y sirviendo movies.schema.yaml.

5. Tests autom√°ticos con Jest y jest-openapi
No lo hemos implementado a√∫n. La l√≠nea que t√∫ mencionaste (jestOpenAPI(...)) se usar√≠a aqu√≠.

üëâ ¬øQu√© te gustar√≠a que hagamos ahora?
¬øMontamos Swagger UI para ver la documentaci√≥n?

¬øTe doy un test Jest con jest-openapi para probar /movies?

¬øRevisamos c√≥mo levantar app.js entero para unir todo?

¬øTe ayudo con otro endpoint o parte del enunciado que no hemos tocado a√∫n?

Dime t√∫ por d√≥nde seguimos.







VALE ESTO ES AQUI: components/shcemas/Movie: 
q es lo de la primera hoja q me has pasado por foto, pero juan me hacen falta mas cosas, q no tenog el enunciado entero ni nada, me tienes q decir q mas falta 

    Movie:
      type: object
      required:
        - title
        - year
        - type
      properties:
        _id:
          $ref: "#/components/schemas/ID"
        title:
          type: string
        year:
          type: integer
        type:
          type: string
          description: Movie type, e.g., "movie"
        plot:
          type: string
        fullplot:
          type: string
        rated:
          type: string
        runtime:
          type: integer
        genres:
          type: array
          items:
            type: string
        cast:
          type: array
          items:
            type: string
        languages:
          type: array
          items:
            type: string
        countries:
          type: array
          items:
            type: string
        released:
          type: string
          format: date-time
        directors:
          type: array
          items:
            type: string
        writers:
          type: array
          items:
            type: string
        poster:
          type: string
          format: uri
        awards:
          type: object
          properties:
            wins:
              type: integer
            nominations:
              type: integer
            text:
              type: string
        imdb:
          type: object
          properties:
            rating:
              type: number
            votes:
              type: integer
            id:
              type: integer
        tomatoes:
          type: object
          additionalProperties: true
        lastupdated:
          type: string
        num_mflix_comments:
          type: integer
      additionalProperties: true



ESTO LE PONE A LU SU CHAT, CAMBIALO 
‚ùóÔ∏è3. Detalle a corregir: c√≥digo de respuesta POST

En el yaml, el POST /movie responde con 200. Debes cambiarlo a 201 para cumplir con REST:

post:
  tags:
    - movie
  summary: Add a new movie
  operationId: addMovie
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Movie'
  responses:
    '201':
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Movie'
    '400':
      description: Invalid input
Y cambia tambi√©n tu router.post para que devuelva 201:

res.status(201).json(result.ops?.[0] || movie);